<?js
var data = obj;
var self = this;
var defaultObjectClass = '';

// Check if the default value is an object or array; if so, apply code highlighting
if (data.defaultvalue && (data.defaultvaluetype === 'object' || data.defaultvaluetype === 'array')) {
    data.defaultvalue = "<pre class=\"prettyprint\"><code>" + data.defaultvalue + "</code></pre>";
    defaultObjectClass = ' class="object-value"';
}
?>
<?js
    var properties = data.properties;
    if (properties && properties.length && properties.forEach && !data.hideconstructor) {
?>

    <h5>Properties:</h5>

    <?js= this.partial('properties.tmpl', data) ?>

<?js } ?>

<dl class="details"><?js if (data.version) {?>
<dt class="tag-version">Version:</dt>
<dd class="tag-version"><?js= version ?></dd>
<?js } if (data.since) {?>
<dt class="tag-since">Since:</dt>
<dd class="tag-since"><?js= since ?></dd>
<?js } if (data.inherited && data.inherits && !data.overrides) { ?>
<dt class="inherited-from">Inherited From:</dt>
<dd class="inherited-from">
    <?js= this.linkto(data.inherits, this.htmlsafe(data.inherits)) ?>
</dd>
<?js } if (data.overrides) { ?>
<dt class="tag-overrides">Overrides:</dt>
<dd class="tag-overrides">
    <?js= this.linkto(data.overrides, this.htmlsafe(data.overrides)) ?>
</dd>
<?js } if (data.implementations && data.implementations.length) { ?>
<dt class="implementations">Implementations:</dt>
<dd class="implementations">
    <?js= this.u.list(data.implementations, item => self.linkto(item, self.htmlsafe(item))) ?>
</dd>
<?js } if (data.implements && data.implements.length) { ?>
<dt class="implements">Implements:</dt>
<dd class="implements">
    <?js= this.u.list(data.implements, item => self.linkto(item, self.htmlsafe(item))) ?>
</dd>
<?js } if (data.mixes && data.mixes.length) { ?>
    <dt class="mixes">Mixes In:</dt>

    <dd class="mixes">
        <?js= this.u.list(data.mixes, item => self.linkto(item, item)) ?>
    </dd>
<?js } if (data.deprecated) { ?>
    <dt class="important tag-deprecated">Deprecated:</dt><?js
        if (data.deprecated === true) { ?><dd class="yes-def tag-deprecated">Yes</dd><?js }
        else { ?><dd><?js= data.deprecated ?></dd><?js }
    ?>
<?js } if (data.author && author.length) {?>
<dt class="tag-author">Author:</dt>
<dd class="tag-author">
    <?js= this.u.list(author, item => self.resolveAuthorLinks(item)) ?>
</dd>
<?js } if (data.copyright) {?>
<dt class="tag-copyright">Copyright:</dt>
<dd class="tag-copyright"><?js= copyright ?></dd>
<?js } if (data.license) {?>
<dt class="tag-license">License:</dt>
<dd class="tag-license"><?js= license ?></dd>
<?js } if (data.defaultvalue) {?>
<dt class="tag-default">Default Value:</dt>
<dd class="tag-default">
    <span<?js= defaultObjectClass ?>><?js= data.defaultvalue ?></span>
</dd>
<?js } if (data.meta && self.outputSourceFiles) {?>
<dt class="tag-source">Source:</dt>
<dd class="tag-source">
    <?js= self.linkto(meta.shortpath) ?>, <?js= self.linkto(meta.shortpath, 'line ' + meta.lineno, null, 'line' + meta.lineno) ?>
</dd>
<?js } if (data.tutorials && tutorials.length) {?>
<dt class="tag-tutorial">Tutorials:</dt>
<dd class="tag-tutorial">
    <?js= this.u.list(tutorials, item => self.tutoriallink(item)) ?>
</dd>
<?js } if (data.see && see.length) {?>
<dt class="tag-see">See:</dt>
<dd class="tag-see">
    <?js= this.u.list(see, item => self.linkto(item)) ?>
</dd>
<?js } if (data.todo && todo.length) {?>
<dt class="tag-todo">To Do:</dt>
<dd class="tag-todo">
    <?js= this.u.list(todo) ?>
</dd>
<?js } ?></dl>
